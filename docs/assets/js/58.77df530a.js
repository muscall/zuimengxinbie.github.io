(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{627:function(e,v,s){"use strict";s.r(v);var _=s(5),a=Object(_.a)({},(function(){var e=this,v=e.$createElement,s=e._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",{attrs:{align:"center"}},[s("img",{attrs:{width:"500",src:"https://p18.qhimg.com/dmfd/2560_1440_/t019f113c5108fe5ae8.jpg"}})]),e._v(" "),s("blockquote",[s("p",[e._v("面试冲冲冲")])]),e._v(" "),s("ul",[s("li",[s("p",[e._v("闭包")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("闭包是什么")]),e._v(" "),s("p",[e._v("方法里返回一个方法，沟通内外部桥梁")])]),e._v(" "),s("li",[s("p",[e._v("闭包存在的意义")]),e._v(" "),s("ul",[s("li",[s("p",[s("strong",[e._v("延迟变量的生命周期")])]),e._v(" "),s("blockquote",[s("p",[e._v("防抖函数，节流")])]),e._v(" "),s("p",[e._v("常驻内存 => 慎用闭包")]),e._v(" "),s("p",[e._v("手动回收")])]),e._v(" "),s("li",[s("p",[e._v("创建私有环境")]),e._v(" "),s("p",[e._v("都有独立的词法作用域")]),e._v(" "),s("p",[e._v("面向对象编程-数据的隐藏与封装")]),e._v(" "),s("blockquote",[s("p",[e._v("vue data为什么是一个函数")]),e._v(" "),s("p",[e._v("保证每一个组件都有一个私有的作用域，不会相互干扰，之后执行生命周期钩子卸载掉")])])])])]),e._v(" "),s("li",[s("p",[e._v("AO、GO")]),e._v(" "),s("ul",[s("li",[e._v("AO： 函数执行期的上下文内容，函数执行完毕，自动自动销毁（闭包除外）")]),e._v(" "),s("li",[e._v("GO:   全局执行的上下文内容")])])]),e._v(" "),s("li",[s("p",[e._v("作用域链")]),e._v(" "),s("ul",[s("li",[e._v("就近原则，从内往外一级一级查找，类似原型链")])])])])]),e._v(" "),s("li",[s("p",[e._v("类")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("定义")]),e._v(" "),s("p",[e._v("定义了一件事物的抽象特点，包含它的属性和方法")])]),e._v(" "),s("li",[s("p",[e._v("对象")]),e._v(" "),s("p",[e._v("类的实例，通过 "),s("code",[e._v("new")]),e._v(" 生成")])]),e._v(" "),s("li",[s("p",[e._v("面向对象三大特性")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("封装")]),e._v(" "),s("p",[e._v("将数据的操作细节隐藏起来，只暴露对外的接口；")]),e._v(" "),s("p",[e._v("外界调用不需要知道细节，通过对外提供的接口来访问对象；")]),e._v(" "),s("p",[e._v("保证了外界无法随意更改对象内部的数据")])]),e._v(" "),s("li",[s("p",[e._v("继承")]),e._v(" "),s("p",[e._v("子类继承父类的所有特性")])]),e._v(" "),s("li",[s("p",[e._v("多态")]),e._v(" "),s("p",[e._v("由继承产生不同的类，还可以实现自身上的方法")])])])]),e._v(" "),s("li",[s("p",[e._v("存取器")]),e._v(" "),s("p",[e._v("（getter & setter）")]),e._v(" "),s("p",[e._v("可以改变属性的读取和赋值行为")])]),e._v(" "),s("li",[s("p",[e._v("修饰符")])]),e._v(" "),s("li",[s("p",[e._v("抽象类")])]),e._v(" "),s("li",[s("p",[e._v("接口")])])])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("泛型")])]),e._v(" "),s("blockquote",[s("p",[e._v("泛型是指在定义函数，接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性")])]),e._v(" "),s("p",[s("strong",[e._v("案例")])]),e._v(" "),s("ul",[s("li",[e._v("定义一个函数，传入数组，返回 数组中的第一个值")])]),e._v(" "),s("p",[s("strong",[e._v("实现")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function getFirst<Type>(arr:Type[]):Type | undefined{\n\treturn arr[0]\n}\n\ngetFirst<string>(['a','b','c'])\ngetFirst<string>([1,2,3])\ngetFirst<undefined>([])\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("渐进式")]),e._v(" "),s("p",[e._v("体现在主张性， 弱主张")]),e._v(" "),s("p",[e._v("在vue核心库（视图模板引擎）的基础上，逐步的添加所需功能（组件系统，路由，状态机等）")]),e._v(" "),s("p",[e._v("主张强弱，有的强势程度会影响到业务开发中的使用方式")]),e._v(" "),s("p",[e._v("react有纯函数的概念")])]),e._v(" "),s("li",[s("p",[e._v("vue 的模板引擎")]),e._v(" "),s("ul",[s("li",[e._v("双大括号的语法")]),e._v(" "),s("li",[e._v("负责组装数据")]),e._v(" "),s("li",[e._v("优点： 可维护性强、可扩展性强、开发效率高、看起来舒服")])])]),e._v(" "),s("li",[s("p",[e._v("v-model 原理")]),e._v(" "),s("ul",[s("li",[e._v("源于表单元素")]),e._v(" "),s("li",[e._v("不同表单元素实现\n"),s("ul",[s("li",[e._v("text、textarea 使用 "),s("code",[e._v("value")]),e._v(", "),s("code",[e._v("input")]),e._v("事件")]),e._v(" "),s("li",[e._v("checkbox 和radio  使用 "),s("code",[e._v("checkout")]),e._v(" 属性 和"),s("code",[e._v("change")]),e._v("事件")])])])])]),e._v(" "),s("li",[s("p",[e._v("函数名与data数据中的数据可以同名吗？")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("答案")]),e._v(" "),s("p",[e._v("不可以")])]),e._v(" "),s("li",[s("p",[e._v("原因")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("props、data、methods、computed、watch 都会挂载到this上， 重名的话，属性会覆盖，vue语法上不同意这样做\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])])])]),e._v(" "),s("li",[s("p",[e._v("定义全局方法")]),e._v(" "),s("ul",[s("li",[e._v("vue.prototype")]),e._v(" "),s("li",[e._v("mixin")]),e._v(" "),s("li",[e._v("use.js (install)")]),e._v(" "),s("li",[e._v("全局变量")])])]),e._v(" "),s("li",[s("p",[e._v("为什么移除过滤器")]),e._v(" "),s("p",[e._v("vue3要精简代码结构，filter能实现的功能，methods方法和computed计算属性也可以实现，更方便维护")])]),e._v(" "),s("li",[s("p",[e._v("vue 兼容")]),e._v(" "),s("p",[e._v("通过腻子脚本（babel-polyfil）  例如 ES6 promise 的功能")])]),e._v(" "),s("li",[s("p",[e._v("vue风格指南")]),e._v(" "),s("ul",[s("li",[e._v("组件放置 component")]),e._v(" "),s("li",[e._v("router页面 放置 pages")]),e._v(" "),s("li",[e._v("组件命名 大驼峰， 短横线")]),e._v(" "),s("li",[e._v("方法命名")]),e._v(" "),s("li",[e._v("自定义事件")]),e._v(" "),s("li",[e._v("prop定义尽可能详细")]),e._v(" "),s("li",[e._v("key值最好书写")])])]),e._v(" "),s("li",[s("p",[e._v("style加 "),s("code",[e._v("scoped")]),e._v(" 如何穿透")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("/deep/ 或 >>>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("处理边界情况")]),e._v(" "),s("blockquote",[s("p",[e._v("在实现一些功能时，使用的手段会出现危险的场景或者有劣势")]),e._v(" "),s("p",[s("strong",[e._v("$forceUpdate")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$forceUpdate\n$root\n$parent\n依赖注入\nprovide 和 inject\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("vue 错误处理")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("分为两种 \n\n组件内部钩子\nerrorCaptured 捕获本组件和子组件抛出的错误，接收error,vm,info 三个参数，return flase 可以阻止错误继续向上抛出错误\n\n全局钩子\nerrorHandler 用于同一处理错误和错误兜底\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("e.target和e.currentTarget有什么区别")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<a href="javascript:;" @click="openPlays($event)" class="openplays-btn">\n      记住，我通过换行符隔开，方便测试\n      <i class="iconfont"></i>\n</a>\nconsole.log(e.target,e.currentTarget)\n\n场景： 我鼠标放在了 i 上\n// e.target 输出 i 元素\n// e.currentTarget 输出 a 元素\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("vue给组件绑定自定义事件无效怎么解决")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("vue2.x\n添加.native 修饰符\nvue3 \n已移除\n事件 emit 也需要再组件中声明\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("vue 为什么要求组件模板只能有一个根元素")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("vue的 VDOM算法只允许VDOM的树状结构有一个根节点。\n从效率上来讲，逻辑抽象树多个根，就会出现多个入口，对于遍历，查找、比较都不方便\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("使用vue渲染大量数据时应该怎么优化？说下你的思路")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("v-memo\n缓存一个模板的子树。 元素和组件可以使用。性能至上\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("怎么缓存当前打开的路由组件，缓存后想更新当前组件怎么办呢")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("借助缓存组件上的钩子\nactived\nbeactived\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("vue diff")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("patch算法\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])]),e._v(" "),s("li",[s("p",[e._v("$nexttick")]),e._v(" "),s("blockquote",[s("p",[e._v("基于视图进行更新，可以类比成一个 setTimeout事件")]),e._v(" "),s("p",[e._v("在DOM更新循环结束之后执行延迟回调")])]),e._v(" "),s("ul",[s("li",[s("p",[e._v("js事件循环机制")]),e._v(" "),s("p",[e._v("微任务与宏任务")])])])]),e._v(" "),s("li",[s("p",[e._v("created和mounted有哪些区别")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("created在模板渲染成html前调用， mouted在渲染成html后调用")])]),e._v(" "),s("li",[s("p",[e._v("区别")]),e._v(" "),s("p",[e._v("当使用一些插件，比如轮播图，图表插件，需要初始化拿到一个载体元素，需要写在mounted中")])])])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("vue父子组件双向绑定的方法有哪些")])]),e._v(" "),s("ol",[s("li",[e._v("prop向下传递，emit向上传递")]),e._v(" "),s("li",[e._v("组件上v-model，只能使用一个v-model")]),e._v(" "),s("li",[e._v("sync修饰符")])])]),e._v(" "),s("li",[s("p",[e._v("vue的 extend （构造器）的理解")])]),e._v(" "),s("li",[s("p",[e._v("v-on可以绑定多个方法吗")]),e._v(" "),s("blockquote",[s("p",[e._v("可以，书写成对象形式的写法")])])]),e._v(" "),s("li",[s("p",[e._v("Vue实例挂载过程（$mount）")]),e._v(" "),s("ol",[s("li",[e._v("实例化一个渲染"),s("strong",[e._v("Watcher")])]),e._v(" "),s("li",[e._v("watcher回调函数中调用 updateComponent() 方法")]),e._v(" "),s("li",[e._v("在updateComponent() 方法中调用 vm._render方法 生成虚拟Node, 最后调用 vm._undate 更新DOM")])])]),e._v(" "),s("li",[s("p",[e._v("v-for 与 v-if 一起使用，哪个优先级高")]),e._v(" "),s("blockquote",[s("p",[e._v("v-for优先级高")])]),e._v(" "),s("p",[e._v("解决方案")]),e._v(" "),s("p",[e._v("v-if 放置于外层容器上（template）; 性能更好")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);