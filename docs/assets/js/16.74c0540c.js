(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{578:function(s,t,e){"use strict";e.r(t);var a=e(5),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",{attrs:{align:"center"}},[e("img",{attrs:{width:"500",src:"https://mmbiz.qpic.cn/mmbiz_jpg/eXCSRjyNYcYKOqIR7uRxp5TgOVYceOY3AKEWd4aGNV0HseYO8lXcssofqIpoHJ1RfkvDog50zTG29MDibBn4Cuw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"}})]),s._v(" "),e("blockquote",[e("p",[s._v("在今天的文章中，我整理汇总了一些有用的JavaScript数组方法。")])]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("Array.map()")])]),s._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" list "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nlist"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" el "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// [2, 4, 6, 8]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.filter()")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4];\nlist.filter((el) => el % 2 === 0); // [2, 4]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.reduce()")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];\nlist.reduce((total, item) => total + item, 0); // 15\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.reduceRight()")])]),s._v(" "),e("blockquote",[e("p",[s._v("从数组的末尾向前将数组中的数组项做累加")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];\nlist.reduceRight((total, item) => total + item, 0); // 15\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.fill()")])]),s._v(" "),e("blockquote",[e("p",[s._v("用静态值填充数组中的元素。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];\nlist.fill(0); // [0, 0, 0, 0, 0]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.find()")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];\nlist.find((el) => el === 3); // 3\nlist.find((el) => el === 6); // undefined\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.indexOf()")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];\nlist.indexOf(3); // 2\nlist.indexOf(6); // -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.lastIndexOf()")])]),s._v(" "),e("blockquote",[e("p",[s._v("返回一个指定的元素在数组中最后出现的位置")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];\nlist.lastIndexOf(3); // 2\nlist.lastIndexOf(3, 1); // -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.findIndex()")])]),s._v(" "),e("blockquote",[e("p",[s._v("返回满足提供的测试功能的数组中第一个元素的索引。否则返回 -1。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const array = [5, 12, 8, 130, 44];\narray.findIndex((element) => element > 13); // 3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Array.includes()")])]),s._v(" "),e("blockquote",[e("p",[s._v("如果给定元素存在于数组中，则返回 true。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];\nlist.includes(3); // true\nlist.includes(6); // false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("11、Array.pop()")])]),s._v(" "),e("blockquote",[e("p",[s._v("从数组中删除最后一个元素并返回该元素。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];\nlist.pop(); // 5\nlist; // [1, 2, 3, 4]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("12、Array.push()")])]),s._v(" "),e("p",[s._v("将新元素附加到数组的末尾，并返回新的长度。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.push(6); // 6list; // [1, 2, 3, 4, 5, 6]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13、*"),e("em",[s._v("Array*")]),s._v(".shift()")])]),s._v(" "),e("p",[s._v("shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。")]),s._v(" "),e("p",[s._v("注意， 此方法改变数组的长度！")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.shift(); // 1list; // [2, 3, 4, 5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14、*"),e("em",[s._v("Array*")]),s._v(".unshift()")])]),s._v(" "),e("p",[s._v("unshift() 方法将新项添加到数组的开头，并返回新的长度。")]),s._v(" "),e("p",[s._v("注意：unshift() 方法会改变数组的长度。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.unshift(0); // 6list; // [0, 1, 2, 3, 4, 5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("15、Array.splice()")])]),s._v(" "),e("p",[s._v("splice() 方法从数组添加/删除项目，并返回删除的项目，注意，splice() 方法会改变原始数组。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.splice(1, 2); // [2, 3]list; // [1, 4, 5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16、Array.slice()")])]),s._v(" "),e("p",[s._v("返回数组中被选中的元素，选择从给定的 start 参数开始的元素，并在给定的 end 参数处结束。注意，slice() 方法不会改变原始数组。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.slice(1, 3); // [2, 3]list; // [1, 2, 3, 4, 5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17、Array.join()")])]),s._v(" "),e("p",[s._v("join() 方法将数组作为字符串返回，元素将由指定的分隔符分隔，默认分隔符是逗号 (,)。注意，join() 方法不会改变原始数组。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.join(', '); // \"1, 2, 3, 4, 5\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18、Array.reverse()")])]),s._v(" "),e("p",[s._v("reverse() 方法反转数组中元素的顺序，但是reverse() 方法会改变原始数组。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.reverse(); // [5, 4, 3, 2, 1]list; // [5, 4, 3, 2, 1]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19、Array.sort()")])]),s._v(" "),e("p",[s._v("sort() 方法对数组的项目进行排序。排序顺序可以是按字母或数字，也可以是升序（向上）或降序（向下）。")]),s._v(" "),e("p",[s._v("默认情况下，sort() 方法将按字母和升序将值作为字符串进行排序。")]),s._v(" "),e("p",[s._v('这适用于字符串（"Apple" 出现在 "Banana" 之前）。但是，如果数字按字符串排序，则 "25" 大于 "100" ，因为 "2" 大于 "1"。')]),s._v(" "),e("p",[s._v("正因为如此，sort() 方法在对数字进行排序时会产生不正确的结果。")]),s._v(" "),e("p",[s._v("我们可以通过提供“比较函数”来解决此问题。")]),s._v(" "),e("p",[s._v("注意，sort() 方法会改变原始数组。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li"),s._v(" "),e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const array = ['D', 'B', 'A', 'C'];array.sort(); // ['A', 'B', 'C', 'D']// ORconst array = [4, 1, 3, 2, 10];array.sort(); // [1, 10, 2, 3, 4]array.sort((a, b) => a - b); // [1, 2, 3, 4, 10]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20、Array.some()")])]),s._v(" "),e("p",[s._v("some() 方法用于检测数组中的元素是否满足指定条件（函数提供），它会依次执行数组的每个元素，如果有一个元素满足条件，则表达式返回true , 剩余的元素不会再执行检测；如果没有满足条件的元素，则返回false。")]),s._v(" "),e("p",[s._v("注意：some() 不会对空数组进行检测，some() 也不会改变原始数组。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.some((el) => el === 3); // truelist.some((el) => el === 6); // false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("21、Array.every()")])]),s._v(" "),e("p",[s._v("every() 方法用于检测数组所有元素是否都符合指定条件（通过函数提供），every() 方法使用指定函数检测数组中的所有元素，如果数组中检测到有一个元素不满足，则整个表达式返回 false ，且剩余的元素不会再进行检测；如果所有元素都满足条件，则返回 true。")]),s._v(" "),e("p",[s._v("注意：every() 不会对空数组进行检测，every() 也不会改变原始数组。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.every((el) => el === 3); // falseconst list = [2, 4, 6, 8, 10];list.every((el) => el%2 === 0); // true\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("22、Array.from()")])]),s._v(" "),e("p",[s._v("Сreаtes 从аrrаy-like or iterаble оbjeсt 创建一个新的аrrаy。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const range = (n) => Array.from({ length: n }, (_, i) => i + 1);console.log(range(10)); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23、Array.of()")])]),s._v(" "),e("p",[s._v("array.of()函数是JavaScript中的內置函数，它使用变量作为函数的参数创建一个新的数组实例。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = Array.of(1, 2, 3, 4, 5);list; // [1, 2, 3, 4, 5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("24、Array.isArray()")])]),s._v(" "),e("p",[s._v("如果给定的值是一个数组，则返回 true。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Array.isArray([1, 2, 3, 4, 5]); // trueArray.isArray(5); // false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25、Array.at()")])]),s._v(" "),e("p",[s._v("返回指定索引处的值。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li"),s._v(" "),e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.at(1); // 2list.at(-1); // 5list.at(-2); // 4\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("26、Array.copyWithin()")])]),s._v(" "),e("p",[s._v("copyWithin() 方法浅复制数组的一部分到同一数组中的另一个位置，并返回它，但不会改变原数组的长度。")]),s._v(" "),e("ul",[e("li"),s._v(" "),e("li")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const list = [1, 2, 3, 4, 5];list.copyWithin(0, 3, 4); // [4, 2, 3, 4, 5]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);